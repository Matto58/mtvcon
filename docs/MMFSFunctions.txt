MMFS FUNCTIONS

These are taken from src/mmfs/mmfs.h.

Partition-related functions:
    mmfsGoToPartition(FILE *drive, int16_t index)
        Seeks the drive to the specified partition index. Returns false if partition was not found, drive has an invalid alignment or if drive is NULL.
        Args:
            drive: pointer to drive file
            index: partition index
    mmfsGetPartitionData(FILE *drive, uint64_t *serialNum, char *label)
        Gets the data of the current partition. Returns false if the partition is invalid or if drive is NULL.
        Output parameters can be NULL, nothing will be written to them if this is the case.
        Args:
            drive: pointer to drive file
            serialNum: (output) pointer to drive serial number
            label: (output) drive label, must fit all 48 bytes
    mmfsValidatePartSector(char *sector)
        Checks if the given sector is a valid partition separator. Returns true if it is, otherwise false.
        Args:
            sector: (input) 128 byte sector

File-related functions:
    mmfsFindFile(FILE *drive, char *shortFileName, uint8_t *permissions, uint64_t *lastMod, uint64_t *created, uint64_t *lastAcc, char *owner, uint64_t *size)
        Finds the file based on its short file name. Returns false if the file is not found or if drive is NULL.
        Output parameters can be NULL, nothing will be written to them if this is the case. lastAcc is last accessed, lastMod is last modified.
        shortFileName must fit 46 bytes, owner must fit 48 bytes.
        Args:
            drive: pointer to drive file
            shortFileName: (input) short file name
    mmfsGetFileMetadata(FILE *drive, uint8_t *permissions, uint64_t *lastMod, uint64_t *created, uint64_t *lastAcc, char *shortFileName, char *owner, uint64_t *size)
        Gets the metadata of the current file. Returns false if the partition is invalid, if the file is invalid or if drive is NULL.
        Output parameters can be NULL, nothing will be written to them if this is the case. lastAcc is last accessed, lastMod is last modified.
        shortFileName must fit 46 bytes, owner must fit 48 bytes.
    mmfsGetFileDataPtrs(FILE *drive, uint64_t continueAddr, int *iter)
        Gets the data pointers of the current file.
        Returns NULL if something went wrong, otherwise an array of pointers. NOTE: Free this array with stdlib's free().
        Args:
            drive: pointer to drive file
            continueAddr: internal variable, set this to 0
            iter: internal pointer, set this to NULL
    mmfsSetFileDataPtrs(FILE *drive, uint64_t *ptrs, int ptrCount)
        Sets the data pointers of the current file.
        Returns true if all pointers were written correctly, otherwise false.
        Args:
            drive: pointer to drive file
            ptrs: (input) array of pointers
            ptrCount: number of pointers in the array
